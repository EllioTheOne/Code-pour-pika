import com.destroystokyo.paper.event.player.PlayerLaunchProjectileEvent;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageByEntityEvent;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;
import org.bukkit.plugin.java.JavaPlugin;

import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

public class NoCommandsAfterHitPaperPlugin extends JavaPlugin implements Listener {

    private Set<UUID> cooldownPlayers = new HashSet<>();

    @Override
    public void onEnable() {
        getServer().getPluginManager().registerEvents(this, this);
    }

    @EventHandler
    public void onEntityDamage(EntityDamageByEntityEvent event) {
        if (event.getEntity() instanceof Player && event.getDamager() instanceof Player) {
            Player damagedPlayer = (Player) event.getEntity();
            Player damager = (Player) event.getDamager();

            // Vérifie si le joueur endommagé est déjà en cooldown
            if (!cooldownPlayers.contains(damagedPlayer.getUniqueId())) {
                // Ajoute le joueur au cooldown
                cooldownPlayers.add(damagedPlayer.getUniqueId());

                // Planifie la suppression du joueur du cooldown après 30 secondes
                Bukkit.getScheduler().runTaskLater(this, () -> cooldownPlayers.remove(damagedPlayer.getUniqueId()), 600L);

                // Annule toutes les commandes du joueur pendant 30 secondes
                Bukkit.getScheduler().runTaskLater(this, () -> {
                    if (damagedPlayer.isOnline()) {
                        damager.sendMessage("Vous pouvez maintenant effectuer des commandes.");
                    }
                }, 600L);
            }
        }
    }

    @EventHandler
    public void onPlayerCommand(PlayerCommandPreprocessEvent event) {
        Player player = event.getPlayer();

        // Vérifie si le joueur est en cooldown
        if (cooldownPlayers.contains(player.getUniqueId())) {
            event.setCancelled(true);
            player.sendMessage("Vous ne pouvez pas effectuer de commandes pendant 30 secondes après avoir été frappé.");
        }
    }
}
